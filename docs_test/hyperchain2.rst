Hyperchain1.2_FQA
================

1.共识机制
----------

共识机制是保证区块链中所有共识节点（即验证节点：validating peer，
VP）按照相同顺序执行交易、写入账本的基础，而记账节点（即非验证节点：non-validating
peer， NVP）只需要从其所连接的共识节点中同步账本信息，因此无需参与共识。

Hyperchain平台支持可插拔的共识机制，可以针对区块链的不同应用场景提供不同的共识算法，当前版本已经实现了\ `PBFT算法 <http://www.usenix.net/legacy/publications/library/proceedings/osdi2000/castro/castro.pdf>`__\ 的改良算法：高鲁棒拜占庭容错算法RBFT（Robust
Byzantine Fault
Tolerance），其算法构思来源于多篇论文(尤其是\ `Aardvark <https://www.usenix.org/legacy/event/nsdi09/tech/full_papers/clement/clement.pdf>`__)，后续将陆续支持RAFT等共识算法。


Q:**主节点阻塞住了，或因为某些因素的影响，性能变差，怎么办?**

A:Hyperchain平台的节点都有自己的ID，正常共识情况下，平台会根据ID的顺序定时轮换主节点。
目前RBFT采用轮换的方式切换主节点，当前的view和总节点的数量决定了主节点的ID。
拜占庭行为可以切换主节点（主节点挂了or主节点发送错误消息），性能变差可能引起拜占庭，从而从节点发起`viewchange`,强行更换主节点


Q:**节点接受交易、打包、共识等过程，是并行的吗？**

A:节点接受交易、打包、共识等过程是并行的，共识时所有节点都能够接受交易并缓存于本地交易池中。主节点接受交易后负责进行打包，打包过程与后续共识流程是并行的，以流水线形式进行。

Q:**简单介绍节点交易池**

.. note::
    交易池是共识节点用于缓存交易的场所，交易池的存在一方面限制了客户端发送交易的频率，另一方面也减少了主节点的带宽压力。
    首先，通过限制交易池的缓存大小，Hyperchain平台可以在交易池达到限制大小后拒绝接收来自客户端的交易，这样，在合理评估
    机器性能的情况下，通过合理设置交易缓存大小，可以最大限度地利用机器性能而又不至于出现异常。其次，共识节点在接收到来自
    客户端的交易后先将其存到自己的交易池中，随后向全网其他共识节点广播该条交易，保证了所有共识节点都维护了一份完整的交易
    列表；主节点在打包后只需要将交易哈希列表放到PrePrepare消息中进行广播即可，而不用将完整的交易列表打包进行广播，大大
    减轻了主节点的出口带宽压力。如果从节点在验证之前发现缺少了某些交易，也只需要向主节点索取缺少的那些交易而不用索取整个区块里面所有的交易。



2.数据存储
----------

Q：**节点recovery的时候，其他节点可以接受交易吗，可以共识吗**

A:处于recovery状态的节点可以将其视为异常节点，	但是要求异常节点个数不超过f个，其余节点均可接受交易并进行共识。recovery节点完成recovery后可加入共识

Q：**动态成员准入的时候，其他节点可以接受交易吗，可以共识吗**

A:所有节点均可接受交易，此时接受的交易缓存在节点上，但是暂不支持增删节点过程中进行共识与写块

Q：**新增节点：节点坏了之后，替换掉坏节点的方案是什么？**

A:如果新增节点过程中，新节点出现问题，新节点就无法加入联盟链，可以尝试重新加入新节点；如果新增节点完成后，有节点出现问题，可以将此问题节点删除，再加入一个替换节点，不过该节点的ID可能会发生改变。

Q：**节点准入认证的时候会产生新的区块吗？**

A:不会。

Q：**交易在不停的发送，主节点又出问题了，一方面要view change,一方面要广播交易，这个会不会乱？**

A:不会乱。所有节点收到交易后均会进行全网广播，由主节点按其收到交易的顺序进行打包。
因此在viewChange过程中，所有交易均会缓存于各节点的交易池中，等viewChange完成之后，新的主节点会按照它收到交易的顺序进行打包与共识。

